// import axios from 'https://cdn.skypack.dev/axios';

// import { axios } from 'https://cdn.skypack.dev/axios';

//funtion to turn list of numbers into a percentage of 100

//semi-generated by github co-pilot extension
const TOKEN = "token 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";
function percentRound(number, precision) {
  if (!precision) {
    precision = 0;
  }
  if (!Array.isArray(number)) {
    throw new Error("percentRound input should be an Array");
  }
  const numberPercents = number.slice();
  const length = number.length;
  const out = new Array(length);
  for (let i = 0; i < length; i++) {
    if (typeof numberPercents[i] === "string") {
      numberPercents[i] = Number.parseFloat(numberPercents[i]);
    }
  }
  const total = numberPercents.reduce((a, b) => a + b, 0);
  for (let i = 0; i < length; i++) {
    numberPercents[i] = (100 * numberPercents[i]) / total;
    out[i] = Math.round(numberPercents[i] * Math.pow(10, precision));
  }
  return out;
}

console.log(percentRound([0.5, 50, 44, 100]));

const allUserReposSearchBox = document.createElement("input");
allUserReposSearchBox.setAttribute("type", "text");
allUserReposSearchBox.setAttribute("id", "all-user-repos-search");
allUserReposSearchBox.setAttribute(
  "placeholder",
  "Search for a users repo - enter github username"
);

const allUserReposSubmit = document.createElement("button");
allUserReposSubmit.setAttribute("id", "search-user-repos-submit");
allUserReposSubmit.innerText = "Search for users repos";

allUserReposSubmit.addEventListener("click", () => {
  let userName = document.getElementById("all-user-repos-search").value;
  console.log(userName);
  listUserRepos(userName);
  document.getElementById("all-user-repos-search").value = "";
});

const repoSearchBox = document.createElement("input");
repoSearchBox.setAttribute("type", "text");
repoSearchBox.setAttribute("id", "repo-search");
repoSearchBox.setAttribute(
  "placeholder",
  "Search for a specific repo - enter repo name"
);

const repoSearchSubmit = document.createElement("button");
repoSearchSubmit.setAttribute("id", "repo-search-submit");
repoSearchSubmit.innerText = "Search for this repo";

repoSearchSubmit.addEventListener("click", () => {
  let repoName = document.getElementById("repo-search").value;
  let userName = document.getElementById("all-user-repos-search").value;
  findRepo(userName, repoName);
  console.log(repoName);
});

allUserReposSearchBox.setAttribute("value", "dannydoesdev");
repoSearchBox.setAttribute("value", "project3");

const searchBoxes = document.createElement("div");
searchBoxes.setAttribute("id", "search-boxes");

searchBoxes.append(allUserReposSearchBox);
searchBoxes.append(allUserReposSubmit);

searchBoxes.appendChild(repoSearchBox);
searchBoxes.append(repoSearchSubmit);

const mainPage = document.getElementById("main");
mainPage.appendChild(searchBoxes);

function findRepo(userName, repoName) {
  console.log("hi");
  const repoURL = `https://api.github.com/repos/${userName}/${repoName}`;

  axios({
    method: "get",
    // headers: {
    //   // "Content-Type": "application/x-www-form-urlencoded",  // making CORS issue
    //   Authorization: TOKEN,
    // },
    url: repoURL,
  }).then((response) => {
    console.log(response);
    document.getElementById("results").innerHTML = "";

    document.getElementById(
      "results"
    ).innerHTML += `<li><h5>Repo name: ${response.data.name}</h5></li><li>Repo description: ${response.data.description}</li><li>Repo link: <a href=${response.data.html_url}>${response.data.html_url}</a</li><br>`;
  });
}

function listUserRepos(userName) {
  const allReposURL = `http://api.github.com/users/${userName}/repos`;
  console.log("****************************************")
  axios.get(allReposURL).then((response) => {
    document.getElementById("results").innerHTML = "";

    console.log(response);
    let profileImg = document.createElement("img");
    profileImg.src = response.data[0].owner.avatar_url;
    profileImg.id = "profile-img";
    let h3 = document.createElement("h3");
    h3.innerText = `Repo list of: ${response.data[0].owner.login}`;
    document.getElementById("results").append(h3);
    document.getElementById("results").append(profileImg);

    //create a list of all the repos
    response.data.map((result) => {
      let repoName = result.name;
      let userName = result.owner.login;

      console.log(result);

      //create div for each repo with id of repoName
      document.getElementById(
        "results"
      ).innerHTML += `<div id="${result.name}" class="repo-list">`;
      //get div
      let repoDiv = document.getElementById(result.name);

      //div content
      repoDiv.innerHTML = `
            <li><h5>Repo name: ${result.name}</h5></li>
            <li>Repo description: ${result.description}</li>
            <li>Repo link: <a href=${result.html_url}>${result.html_url}</a></li>
            <li>Repo main language: ${result.language}</li></div><br>
            Select this repo: <button id="${result.name}-button">Search</button>
            `;
      //note - don't need last line above - was just testing diff ways to do this

      //add percentages from other function (WORKING)
      languagePct(userName, repoName);

      //Multiple ways to try to get the individual repo info to click through to repo search fn findRepo

      repoDiv.addEventListener("click", () => {
        console.log("Jericho testing");
        findRepo(userName, repoName);
      });
      let queryRepoButton = document.getElementById(`${result.name}-button`);
      queryRepoButton.addEventListener("click", () => {
        findRepo(userName, repoName);
      });

      //ONLY APPLIES TO LAST REPO FOR SOME REASON

      //button to select repo and run findRepo function
      //  let selectRepoButton = document.createElement('button');

      //  selectRepoButton.innerText = 'Select this repo';

      // selectRepoButton.addEventListener('click', () => {
      //     console.log('hey')
      //     findRepo(userName, repoName);
      // });

      // repoDiv.appendChild(selectRepoButton);
    });
  });
}

//Currently requires div id to be the same as the repo name to work
function languagePct(userName, repoName) {
  const langURL = `https://api.github.com/repos/${userName}/${repoName}/languages`;

  axios({
    method: "get",
    // headers: {
    //   // "Content-Type": "application/x-www-form-urlencoded",
    //   Authorization: TOKEN,
    // },
    url: langURL,
  }).then((response) => {
    let langPctArr = [];
    let langNameArr = [];
    for (let [lang, pct] of Object.entries(response.data)) {
      langPctArr.push(pct);
      langNameArr.push(lang);
    }

    let roundedLangPctArr = percentRound(langPctArr);

    for (let i = 0; i < langNameArr.length; i++) {
      if (roundedLangPctArr[i] > 5) {
        document.getElementById(
          `${repoName}`
        ).innerHTML += `<li>${langNameArr[i]}: ${roundedLangPctArr[i]}%</li>`;
      }
    }
  });
}
